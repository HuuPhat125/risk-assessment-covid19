name: SageMaker Sentiment Analysis CI/CD - Production

on:
  pull_request:
    branches: [main]

jobs:
  deploy-model:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy API Gateway + Lambda via CloudFormation
        run: |
          aws cloudformation deploy \
            --template-file src/CloudFormation.yml \
            --stack-name ml \
            --capabilities CAPABILITY_NAMED_IAM \
      
      - name: Get API Gateway URL from CloudFormation outputs
        id: get_api_url
        run: |
          API_URL=$(aws cloudformation describe-stacks \
            --stack-name ml \
            --query "Stacks[0].Outputs[?OutputKey=='ApiUrl'].OutputValue" \
            --output text)
          echo "api_url=$API_URL" >> $GITHUB_OUTPUT

      - name: Update Vercel env var NEXT_PUBLIC_PREDICT_API and redeploy
        id: update_vercel_env
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: prj_hrSaG26N89mNojtBAb9JKxZwPgcL
          API_PREDICT_URL: ${{ steps.get_api_url.outputs.api_url }}
        run: |
          # L·∫•y ID c·ªßa bi·∫øn m√¥i tr∆∞·ªùng hi·ªán t·∫°i (n·∫øu c√≥)
          ENV_ID=$(curl -s -H "Authorization: Bearer $VERCEL_TOKEN" \
            https://api.vercel.com/v9/projects/${VERCEL_PROJECT_ID}/env \
            | jq -r '.env | map(select(.key=="NEXT_PUBLIC_PREDICT_API"))[0].id')

          # N·∫øu bi·∫øn ƒë√£ t·ªìn t·∫°i, PATCH ƒë·ªÉ c·∫≠p nh·∫≠t
          if [ "$ENV_ID" != "null" ] && [ -n "$ENV_ID" ]; then
            echo "üîÑ Updating existing env var NEXT_PUBLIC_PREDICT_API"
            curl -s -X PATCH "https://api.vercel.com/v9/projects/${VERCEL_PROJECT_ID}/env/${ENV_ID}" \
              -H "Authorization: Bearer $VERCEL_TOKEN" \
              -H "Content-Type: application/json" \
              -d "{\"value\":\"${API_PREDICT_URL}\",\"target\":[\"production\"]}"
          else
            echo "‚ûï Creating new env var NEXT_PUBLIC_PREDICT_API"
            curl -s -X POST "https://api.vercel.com/v9/projects/${VERCEL_PROJECT_ID}/env" \
              -H "Authorization: Bearer $VERCEL_TOKEN" \
              -H "Content-Type: application/json" \
              -d "{\"key\":\"NEXT_PUBLIC_PREDICT_API\",\"value\":\"${API_PREDICT_URL}\",\"target\":[\"production\"]}"
          fi

          # üîÅ Trigger redeploy
          echo "üöÄ Triggering Vercel redeploy..."
          curl -s -X POST "https://api.vercel.com/v13/deployments" \
            -H "Authorization: Bearer $VERCEL_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"projectId\": \"${VERCEL_PROJECT_ID}\"}"

      - name: Deploy model to SageMaker
        env:
          PREFIX: ${{ secrets.PREFIX }}
          GITHUB_SHA: ${{ github.sha }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
          IAM_ROLE_NAME: ${{ secrets.IAM_ROLE_NAME }}
        run: |
          python deploy.py --model_config logistic_regression,decision_tree,knn,mlp,naive_bayes,random_forest

      # - name: Replace API URL in index.html
      #   run: |
      #     sed -i 's|<!--API_URL_PLACEHOLDER-->|${{ env.API_URL }}|g' Project/website/index.html
